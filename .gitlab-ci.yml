stages:
  - environment
  - test_docs
  - publish

before_script:
  # Assumes CI executes on AEA compute servers
  - aea_compute_path="/projects/aea_compute"
  - aea_modulefiles="${aea_compute_path}/modulefiles"
  - module use ${aea_modulefiles}
  - module use ${PWD}/modulefiles
  # Prefer the CI environment and fall back to AEA environment(s)
  - project_environment="tardigrade-examples-env"
  - environment_choices="${project_environment} aea-beta"
  #- environment_choices="aea-beta"
  - for env in ${environment_choices}; do if [[ -d "${aea_compute_path}/${env}" ]]; then environment=${env}; break; fi; done
  - environment_choices="aea-nightly aea-quarterly aea-release"
  - for env in ${environment_choices}; do if [[ -d "${aea_compute_path}/${env}" ]]; then base_environment=${env}; break; fi; done
  - echo ${base_environment}
  - module load ${base_environment}
  - environment_path="${aea_compute_path}/${project_environment}"
  - if [[ -d ${environment_path} ]]; then module unload ${base_environment}; module load ${project_environment}; fi
  - conda info

environment:
  stage: environment
  variables:
    GIT_STRATEGY: clone
  script:
    # Always build from the base/aea compute environment with boa/libmamba
    - module unload ${project_environment}
    - module load ${base_environment}
    # Don't rebuild environment for merge request pipelines unless the environment is missing
    - if [[ -d "${environment_path}" ]]; then exists=true; else exists=false; fi
    - if [[ $CI_MERGE_REQUEST_ID ]] && ${exists}; then exit 0; fi
    # Don't rebuild environment for main unless the environment file has changed or the environment doesn't exist
    - files=$(git diff --name-only ${CI_COMMIT_SHA} ${CI_COMMIT_BEFORE_SHA}) || true
    - if [[ $CI_COMMIT_BRANCH == "main" ]]; then production=true; else production=false; fi
    - if [[ "${files}" == *"environment.yml"* ]]; then modified=true; else modified=false; fi
    - if ${production} && ${exists} && ! ${modified}; then exit 0; fi
    # Set LANL proxies
    - export ALL_PROXY="proxyout.lanl.gov:8080"
    - export HTTP_PROXY="http://$ALL_PROXY"
    - export HTTPS_PROXY=$HTTP_PROXY
    # Re-build the Conda environment on changes to environment files
    - conda env create --prefix ${environment_path} --file environment.yml --solver=libmamba --force
    # Remove write permissions from group to avoid accidental environment changes
    #- chmod -R 755 ${environment_path}
    # place the common modulefiles in an accessible location
    - cp ${PWD}/modulefiles/* ${aea_modulefiles}

  tags:
    - shell-aea

# test that docs build without publishing
test_docs:
  stage: test_docs
  variables:
    GIT_STRATEGY: clone
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - waves --version
    - scons -h
    - scons html
  tags:
    - shell-aea

# It MUST be called pages
pages:
  stage: publish
  variables:
    GIT_STRATEGY: clone
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "dev"
  script:
    - mkdir -p public/dev
    - scons html
    - cp -r build/docs/html/* public/dev
  artifacts:
    paths:
      # It MUST be called public
      - public
  tags:
    - shell-aea
